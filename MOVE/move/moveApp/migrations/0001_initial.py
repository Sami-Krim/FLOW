# Generated by Django 4.2.2 on 2023-07-05 15:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('codeClient', models.IntegerField(primary_key=True, serialize=False)),
                ('codeAgenceClient', models.CharField(max_length=3)),
                ('idClient', models.IntegerField()),
                ('nomClient', models.CharField(max_length=30)),
                ('preClient', models.CharField(max_length=30)),
                ('dateNaissanceClient', models.DateField()),
                ('lieuNaissanceClient', models.CharField(max_length=50)),
                ('nationaliteClient', models.CharField(max_length=50)),
                ('sexeClient', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')])),
                ('adresse1Client', models.CharField(max_length=100)),
                ('adresse2Client', models.CharField(max_length=100)),
                ('codePostal', models.DecimalField(decimal_places=0, max_digits=10)),
                ('numTelClient', models.CharField(max_length=20)),
                ('pereClient', models.CharField(max_length=30)),
                ('mereClient', models.CharField(max_length=80)),
                ('dateAjoutClient', models.DateField()),
                ('situationFamiliale', models.IntegerField(choices=[(0, 'Célébataire'), (1, 'Marié(e)')])),
                ('typePersonneClient', models.IntegerField(choices=[(0, 'Morale'), (1, 'Physique')])),
                ('professionClient', models.CharField(max_length=50)),
                ('activiteClient', models.CharField(max_length=50)),
                ('gerantClient', models.CharField(max_length=80)),
                ('clientResideDZ', models.BooleanField()),
                ('pieceIdentClient', models.IntegerField(choices=[(0, "Carte d'identité"), (1, 'Permis de conduire')])),
                ('dateDelivrancePieceIdent', models.DateField()),
                ('lieuDelivrancePieceIdent', models.CharField(max_length=100)),
                ('numRegistreCommerceClient', models.IntegerField()),
                ('clientPresume', models.BooleanField()),
                ('nbrModifInfoClient', models.PositiveBigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GrandLivres',
            fields=[
                ('idGL', models.IntegerField(primary_key=True, serialize=False)),
                ('libelleGL', models.CharField(max_length=100)),
                ('sensOperation', models.IntegerField(choices=[(0, 'Débit'), (1, 'Crédit'), (2, 'Débit/Crédit')])),
                ('GLSusp', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Operations',
            fields=[
                ('numOperation', models.IntegerField(primary_key=True, serialize=False)),
                ('libelleOperation', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateurs',
            fields=[
                ('idUtil', models.IntegerField(primary_key=True, serialize=False)),
                ('nomUtil', models.CharField(max_length=30)),
                ('preUtil', models.CharField(max_length=30)),
                ('mdpUtil', models.CharField(max_length=100)),
                ('UtilSusp', models.BooleanField()),
                ('nivUtil', models.IntegerField(choices=[(0, 'Simple'), (1, 'Administrateur')])),
                ('serviceUtil', models.CharField(max_length=100)),
                ('dateCreUtil', models.DateField()),
                ('heureCreUtil', models.TimeField()),
                ('dateDernOperUtil', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Comptes',
            fields=[
                ('numeroCompte', models.IntegerField(primary_key=True, serialize=False)),
                ('dateCreationCompte', models.DateField()),
                ('soldeCourant', models.PositiveBigIntegerField()),
                ('soldeHier', models.PositiveBigIntegerField()),
                ('dateDerniereOperation', models.DateField()),
                ('compteEnOpposition', models.BooleanField()),
                ('dateMiseEnOpposition', models.DateField()),
                ('dateFermetureCompte', models.DateField()),
                ('GL', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='moveApp.grandlivres')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comptes_client', to='moveApp.clients')),
            ],
        ),
        migrations.CreateModel(
            name='Mouvements',
            fields=[
                ('numMouvement', models.IntegerField(primary_key=True, serialize=False)),
                ('numTransaction', models.IntegerField()),
                ('montantMouvement', models.PositiveBigIntegerField()),
                ('dateMouvement', models.DateField()),
                ('heureTransaction', models.TimeField()),
                ('libelleTransaction', models.CharField(max_length=100)),
                ('RIB', models.CharField(max_length=100)),
                ('GL', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='moveApp.grandlivres')),
                ('compte', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='moveApp.comptes')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='moveApp.operations')),
                ('utilIntro', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mouvements_intro', to='moveApp.utilisateurs')),
                ('utilValid', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mouvements_valid', to='moveApp.utilisateurs')),
            ],
            options={
                'unique_together': {('numTransaction', 'compte', 'GL')},
            },
        ),
    ]
